// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: role.sql

package repository

import (
	"context"
)

const assignUserRole = `-- name: AssignUserRole :exec
INSERT INTO user_role(user_id, role_id)
VALUES ($1, $2)
`

type AssignUserRoleParams struct {
	UserID int64
	RoleID int64
}

func (q *Queries) AssignUserRole(ctx context.Context, arg AssignUserRoleParams) error {
	_, err := q.db.Exec(ctx, assignUserRole, arg.UserID, arg.RoleID)
	return err
}

const getRole = `-- name: GetRole :one
SELECT id, name FROM roles
WHERE name = $1
`

func (q *Queries) GetRole(ctx context.Context, name string) (Role, error) {
	row := q.db.QueryRow(ctx, getRole, name)
	var i Role
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
